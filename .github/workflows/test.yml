name: Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-javascript:
    name: JavaScript Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run JavaScript tests
        run: npm run test:js
        
      - name: Upload JavaScript test coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: javascript
          name: javascript-coverage

  test-ios:
    name: iOS Tests
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'
          
      - name: Run iOS tests
        run: |
          cd ios
          xcodebuild test \
            -scheme CapacitorAdyen \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
            -enableCodeCoverage YES \
            -derivedDataPath DerivedData
            
      - name: Upload iOS test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-test-results
          path: ios/DerivedData/Logs/Test/*.xcresult

  test-android:
    name: Android Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Run Android tests
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew test --stacktrace
          
      - name: Upload Android test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-test-results
          path: android/build/test-results/
          
      - name: Upload Android test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-test-reports
          path: android/build/reports/tests/

  verify-build:
    name: Verify Build
    runs-on: ubuntu-latest
    needs: [test-javascript]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build plugin
        run: npm run build
        
      - name: Verify web build
        run: npm run verify:web

  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint